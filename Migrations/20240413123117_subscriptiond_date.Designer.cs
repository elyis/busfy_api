// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using busfy_api.src.Infrastructure.Data;

#nullable disable

namespace busfy_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240413123117_subscriptiond_date")]
    partial class subscriptiond_date
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("busfy_api.src.Domain.Models.ContentCategory", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("ContentCategories");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.Post", b =>
                {
                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreationId")
                        .HasColumnType("uuid");

                    b.Property<string>("CategoryName")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.HasKey("CreatorId", "CreationId", "CategoryName");

                    b.HasIndex("CategoryName");

                    b.HasIndex("CreationId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.PostComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PostCategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PostCreationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostCreatorId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("PostCreatorId", "PostCreationId", "PostCategoryName");

                    b.ToTable("PostComments");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.PostLike", b =>
                {
                    b.Property<Guid>("EvaluatorId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<string>("PostCategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PostCreationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostCreatorId")
                        .HasColumnType("uuid");

                    b.HasKey("EvaluatorId", "PostId");

                    b.HasIndex("PostCreatorId", "PostCreationId", "PostCategoryName");

                    b.ToTable("PostLikes");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CountDays")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.UserCreation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContentSubscriptionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserCreations");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.UserCreationComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreationId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCreationComments");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.UserCreationLike", b =>
                {
                    b.Property<Guid>("EvaluatorId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreationId")
                        .HasColumnType("uuid");

                    b.HasKey("EvaluatorId", "CreationId");

                    b.HasIndex("CreationId");

                    b.ToTable("UserCreationLikes");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.UserFavouritePost", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PostCategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PostCreationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostCreatorId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "PostId");

                    b.HasIndex("PostCreatorId", "PostCreationId", "PostCategoryName");

                    b.ToTable("UserFavouritePosts");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LockDuration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LockReason")
                        .HasColumnType("text");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RestoreCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RestoreCodeValidBefore")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserTag")
                        .HasColumnType("text");

                    b.Property<bool>("WasPasswordResetRequest")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.UserSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<DateTime?>("TokenValidBefore")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserSessions");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.UserSubscription", b =>
                {
                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("SubscriptionId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSubscriptions");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.Post", b =>
                {
                    b.HasOne("busfy_api.src.Domain.Models.ContentCategory", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("busfy_api.src.Domain.Models.UserCreation", "Creation")
                        .WithMany("Posts")
                        .HasForeignKey("CreationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("busfy_api.src.Domain.Models.UserModel", "Creator")
                        .WithMany("Posts")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Creation");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.PostComment", b =>
                {
                    b.HasOne("busfy_api.src.Domain.Models.UserModel", "User")
                        .WithMany("PostComments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("busfy_api.src.Domain.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostCreatorId", "PostCreationId", "PostCategoryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.PostLike", b =>
                {
                    b.HasOne("busfy_api.src.Domain.Models.UserModel", "Evaluator")
                        .WithMany("PostLikes")
                        .HasForeignKey("EvaluatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("busfy_api.src.Domain.Models.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostCreatorId", "PostCreationId", "PostCategoryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evaluator");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.Subscription", b =>
                {
                    b.HasOne("busfy_api.src.Domain.Models.UserModel", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.UserCreation", b =>
                {
                    b.HasOne("busfy_api.src.Domain.Models.UserModel", "User")
                        .WithMany("Creations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.UserCreationComment", b =>
                {
                    b.HasOne("busfy_api.src.Domain.Models.UserCreation", "Creation")
                        .WithMany("Comments")
                        .HasForeignKey("CreationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("busfy_api.src.Domain.Models.UserModel", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.UserCreationLike", b =>
                {
                    b.HasOne("busfy_api.src.Domain.Models.UserCreation", "Creation")
                        .WithMany("Likes")
                        .HasForeignKey("CreationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("busfy_api.src.Domain.Models.UserModel", "Evaluator")
                        .WithMany("Likes")
                        .HasForeignKey("EvaluatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creation");

                    b.Navigation("Evaluator");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.UserFavouritePost", b =>
                {
                    b.HasOne("busfy_api.src.Domain.Models.UserModel", "User")
                        .WithMany("FavouritePosts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("busfy_api.src.Domain.Models.Post", "Post")
                        .WithMany("FavouritedBy")
                        .HasForeignKey("PostCreatorId", "PostCreationId", "PostCategoryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.UserSession", b =>
                {
                    b.HasOne("busfy_api.src.Domain.Models.UserModel", "User")
                        .WithMany("Sessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.UserSubscription", b =>
                {
                    b.HasOne("busfy_api.src.Domain.Models.Subscription", "Subscription")
                        .WithMany("Subscriptions")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("busfy_api.src.Domain.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");

                    b.Navigation("User");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.ContentCategory", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("FavouritedBy");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.Subscription", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.UserCreation", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("busfy_api.src.Domain.Models.UserModel", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Creations");

                    b.Navigation("FavouritePosts");

                    b.Navigation("Likes");

                    b.Navigation("PostComments");

                    b.Navigation("PostLikes");

                    b.Navigation("Posts");

                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
